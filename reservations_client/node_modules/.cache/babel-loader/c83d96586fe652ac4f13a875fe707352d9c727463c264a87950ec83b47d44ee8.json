{"ast":null,"code":"var _jsxFileName = \"/Users/chelsealee/cs348_project_dep/reservations_client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _location$state;\n  const [restaurant, setRestaurant] = useState('');\n  const [selectedRestaurant, setSelectedRestaurant] = useState('');\n  const [party, setParty] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [note, setNote] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n  const [reservations, setReservations] = useState([]);\n  const location = useLocation();\n  const username = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username) || 'Guest'; // Fallback to \"Guest\" if username is not provided\n\n  // for sorting\n  const [category, setCategory] = useState(localStorage.getItem('selectedCategory') || '');\n\n  // for searching\n  const [search, setSearch] = useState('');\n\n  // for editing:\n  const [editParty, setEditParty] = useState('');\n  const [editDate, setEditDate] = useState({});\n  const [editTime, setEditTime] = useState({});\n  const [isEditing, setIsEditing] = useState(false);\n  const [editData, setEditData] = useState({});\n  const [restaurants, setRestaurants] = useState([]);\n  const [displayRestaurant, setDisplayRestaurant] = useState([]);\n  const [myRating, setMyRating] = useState('');\n  const apiUrl = process.env.REACT_APP_API_URL;\n  console.log(apiUrl);\n\n  // call to server to fetch restaurant list\n  const fetchRestaurants = async () => {\n    try {\n      //      const response = await fetch('https://chellee-cs348-project.appspot.com/restaurant');\n      const response = await fetch(`${apiUrl}/restaurant`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setRestaurants(data);\n    } catch (err) {\n      console.error(\"Error fetching restaurants\", err);\n    }\n  };\n\n  // call to server to get reservations\n  // added filter by username for the reservation (note reservation table updated with user_Id and restaurant_Id)\n  const fetchReservations = async () => {\n    try {\n      const response = await fetch(`${apiUrl}/reservation?username=${encodeURIComponent(username)}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(data);\n      setReservations(data);\n    } catch (err) {\n      console.error(\"Error fetching reservations\", err);\n    }\n  };\n  useEffect(() => {\n    const savedCategory = localStorage.getItem('selectedCategory');\n    if (savedCategory) {\n      setCategory(savedCategory);\n      if (savedCategory === 'DateAsc') {\n        sortDateAscending();\n      } else if (savedCategory === 'DateDesc') {\n        sortDateDescending();\n      } else if (savedCategory === 'PartyDesc') {\n        sortPartyDescending();\n      } else if (savedCategory === 'PartyAsc') {\n        sortPartyAscending();\n      }\n    } else {\n      fetchReservations();\n    }\n    fetchRestaurants();\n  }, []);\n\n  // (note reservation table updated with user_Id and restaurant_Id)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${apiUrl}/reservation`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          restaurant: selectedRestaurant,\n          party: parseInt(party),\n          date: date,\n          time: time,\n          note: note\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.log(errorData);\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setResponseMessage(`Reservation added: ${data.restaurant}`);\n      fetchReservations();\n      setSelectedRestaurant('');\n      setParty('');\n      setDate('');\n      setTime('');\n      setNote('');\n    } catch (err) {\n      setResponseMessage(err.message || 'Error adding reservation');\n    }\n  };\n\n  // call to server to edit reservations\n  const handleEdit = async (reservationId, updatedReservation) => {\n    console.log(updatedReservation);\n    try {\n      const response = await fetch(`${apiUrl}/reservation/edit/${reservationId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedReservation)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setResponseMessage(`Reservation edited: ${data.restaurant}`);\n      fetchReservations();\n    } catch (err) {\n      setResponseMessage('Error editing reservation');\n    }\n  };\n\n  // call to server to delete reservations\n  const handleDelete = async reservationId => {\n    try {\n      const response = await fetch(`${apiUrl}/reservation/${reservationId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n    } catch (err) {\n      setResponseMessage('Error deleting reservation');\n    }\n    fetchReservations();\n  };\n\n  // call to server to filter\n  const handleSortChange = e => {\n    const selectedCategory = e.target.value;\n    setCategory(selectedCategory);\n    localStorage.setItem('selectedCategory', selectedCategory);\n    if (selectedCategory === 'DateAsc') {\n      sortDateAscending();\n    } else if (selectedCategory === 'DateDesc') {\n      sortDateDescending();\n    } else if (selectedCategory === 'PartyAsc') {\n      sortPartyAscending();\n    } else if (selectedCategory === 'PartyDesc') {\n      sortPartyDescending();\n    } else {\n      setCategory('');\n      localStorage.removeItem('selectedCategory');\n      fetchReservations();\n    }\n  };\n\n  // call to server to sort by date\n  const sortDateDescending = async () => {\n    try {\n      const response = await fetch(`${apiUrl}/reservation/sorted-date?sort=desc&username=${encodeURIComponent(username)}`, {\n        method: 'GET'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const sortedReservations = await response.json();\n      setReservations(sortedReservations);\n    } catch (err) {\n      setResponseMessage('Error sorting reservation');\n    }\n    //fetchReservations();\n  };\n\n  // call to server to sort by date\n  const sortDateAscending = async () => {\n    try {\n      const response = await fetch(`${apiUrl}/reservation/sorted-date?sort=asc&username=${encodeURIComponent(username)}`, {\n        method: 'GET'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const sortedReservations = await response.json();\n      setReservations(sortedReservations);\n    } catch (err) {\n      setResponseMessage('Error sorting reservation');\n    }\n    //fetchReservations();\n  };\n\n  // call to server to sort by date\n  const sortPartyDescending = async () => {\n    try {\n      const response = await fetch(`${apiUrl}/reservation/sorted-party?sort=desc&username=${encodeURIComponent(username)}`, {\n        method: 'GET'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const sortedReservations = await response.json();\n      setReservations(sortedReservations);\n    } catch (err) {\n      setResponseMessage('Error sorting reservation');\n    }\n    //fetchReservations();\n  };\n\n  // call to server to sort by date\n  const sortPartyAscending = async () => {\n    try {\n      const response = await fetch(`${apiUrl}/reservation/sorted-party?sort=asc&username=${encodeURIComponent(username)}`, {\n        method: 'GET'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const sortedReservations = await response.json();\n      setReservations(sortedReservations);\n    } catch (err) {\n      setResponseMessage('Error sorting reservation');\n    }\n    //fetchReservations();\n  };\n  const handleSearchChange = e => {\n    const searchTerm = e.target.value;\n    setSearch(searchTerm);\n    searchReservation(searchTerm); // Trigger search whenever the input changes\n  };\n\n  // call to server to search by restaurant name\n  const searchReservation = async searchTerm => {\n    //console.log(searchTerm)\n    try {\n      const response = await fetch(`${apiUrl}/reservation/search?q=${encodeURIComponent(searchTerm)}&username=${encodeURIComponent(username)}`, {\n        // encodeURIComponent prevents injections\n        method: 'GET'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      //console.log(\"Returning\" ,data);\n      setReservations(data);\n    } catch (err) {\n      setResponseMessage('Error searching reservation');\n    }\n  };\n\n  // -------------------- Restaurant Rating calls ---------------------------------------\n  const handleRestaurantSubmit = async e => {\n    e.preventDefault();\n    if (!selectedRestaurant) return;\n    try {\n      const response = await fetch(`${apiUrl}/restaurant/${selectedRestaurant}`, {\n        method: 'GET'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      //console.log(\"Returning\" ,data);\n      setDisplayRestaurant(data);\n    } catch (err) {\n      setResponseMessage('Error searching restaurant');\n    }\n  };\n  const handleAddRating = async () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Reservation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedRestaurant,\n        onChange: e => setSelectedRestaurant(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a Restaurant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: restaurant.name,\n          children: restaurant.name\n        }, restaurant._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Party Number\",\n        value: party,\n        onChange: e => setParty(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        step: \"1800\",\n        placeholder: \"Time\",\n        value: time,\n        onChange: e => setTime(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Note\",\n        value: note,\n        onChange: e => setNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Reservation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), responseMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: responseMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservation-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Reservations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Search By Restaurant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Restaurant Name\",\n          value: search,\n          onChange: handleSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sort-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sort By\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: handleSortChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DateAsc\",\n            children: \"Date: ascending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DateDesc\",\n            children: \"Date: descending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PartyAsc\",\n            children: \"Party: ascending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PartyDesc\",\n            children: \"Party: descending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservation-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Restaurant Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Party\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservation-list\",\n        children: reservations.map(reservation => {\n          var _editData$reservation, _editData$reservation2, _editData$reservation3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reservation-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: reservation.restaurant,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\"\n              /*editParty = {reservation.party}\n              value={editParty} \n              readOnly = {false}\n              onChange = {(e) => setEditParty({...editParty, [reservation._id]: e.target.value})}*/,\n              value: ((_editData$reservation = editData[reservation._id]) === null || _editData$reservation === void 0 ? void 0 : _editData$reservation.party) || reservation.party,\n              onChange: e => setEditData(prev => ({\n                ...prev,\n                [reservation._id]: {\n                  ...prev[reservation._id],\n                  party: parseInt(e.target.value)\n                }\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\"\n              /*value={new Date(reservation.date).toISOString().split('T')[0]} \n              readOnly = {false}\n              onChange = {(e) => setEditDate({...editDate, [reservation._id]: e.target.value})}*/,\n              value: ((_editData$reservation2 = editData[reservation._id]) === null || _editData$reservation2 === void 0 ? void 0 : _editData$reservation2.date) || new Date(reservation.date).toISOString().split('T')[0],\n              onChange: e => setEditData(prev => ({\n                ...prev,\n                [reservation._id]: {\n                  ...prev[reservation._id],\n                  date: e.target.value\n                }\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\"\n              /*value={reservation.time} \n              readOnly = {false}\n              onChange = {(e) => setEditTime({...editTime, [reservation._id]: e.target.value})}*/,\n              value: ((_editData$reservation3 = editData[reservation._id]) === null || _editData$reservation3 === void 0 ? void 0 : _editData$reservation3.time) || reservation.time,\n              onChange: e => setEditData(prev => ({\n                ...prev,\n                [reservation._id]: {\n                  ...prev[reservation._id],\n                  time: e.target.value\n                }\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: reservation.note || '',\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(reservation._id, editData[reservation._id] || {}),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(reservation._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)]\n          }, reservation._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2c68MUFlD/e3cA/ToltyRnVRkLs=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","App","_s","_location$state","restaurant","setRestaurant","selectedRestaurant","setSelectedRestaurant","party","setParty","date","setDate","time","setTime","note","setNote","responseMessage","setResponseMessage","reservations","setReservations","location","username","state","category","setCategory","localStorage","getItem","search","setSearch","editParty","setEditParty","editDate","setEditDate","editTime","setEditTime","isEditing","setIsEditing","editData","setEditData","restaurants","setRestaurants","displayRestaurant","setDisplayRestaurant","myRating","setMyRating","apiUrl","process","env","REACT_APP_API_URL","console","log","fetchRestaurants","response","fetch","ok","Error","status","data","json","err","error","fetchReservations","encodeURIComponent","method","headers","savedCategory","sortDateAscending","sortDateDescending","sortPartyDescending","sortPartyAscending","handleSubmit","e","preventDefault","body","JSON","stringify","parseInt","errorData","message","handleEdit","reservationId","updatedReservation","handleDelete","handleSortChange","selectedCategory","target","value","setItem","removeItem","sortedReservations","handleSearchChange","searchTerm","searchReservation","handleRestaurantSubmit","handleAddRating","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","disabled","map","name","_id","type","placeholder","step","reservation","_editData$reservation","_editData$reservation2","_editData$reservation3","prev","Date","toISOString","split","onClick","_c","$RefreshReg$"],"sources":["/Users/chelsealee/cs348_project_dep/reservations_client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css'\nimport { useLocation } from 'react-router-dom';\n\nfunction App() {\n  const [restaurant, setRestaurant] = useState('');\n  const [selectedRestaurant, setSelectedRestaurant] = useState('');\n  const [party, setParty] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [note, setNote] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n  const [reservations, setReservations] = useState([]);\n\n  const location = useLocation();\n  const username = location.state?.username || 'Guest'; // Fallback to \"Guest\" if username is not provided\n\n  // for sorting\n  const [category, setCategory] = useState(localStorage.getItem('selectedCategory') || '');\n\n  // for searching\n  const [search, setSearch] = useState('');\n\n  // for editing:\n  const [editParty, setEditParty] = useState('');\n  const [editDate, setEditDate] = useState({});\n  const [editTime, setEditTime] = useState({});\n  const [isEditing, setIsEditing] = useState(false);\n\n  const [editData, setEditData] = useState({});\n\n  const [restaurants, setRestaurants] = useState([]);\n  const [displayRestaurant, setDisplayRestaurant] = useState([]);\n\n  const [myRating, setMyRating] = useState('');\n\n  const apiUrl = process.env.REACT_APP_API_URL;\n  console.log(apiUrl);\n\n  // call to server to fetch restaurant list\n  const fetchRestaurants = async () => {\n    try {\n//      const response = await fetch('https://chellee-cs348-project.appspot.com/restaurant');\n      const response = await fetch(`${apiUrl}/restaurant`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setRestaurants(data);\n    } catch (err) {\n      console.error(\"Error fetching restaurants\", err);\n    }\n  };\n\n  // call to server to get reservations\n  // added filter by username for the reservation (note reservation table updated with user_Id and restaurant_Id)\n  const fetchReservations = async () => {\n\n    try {\n      const response = await fetch(`${apiUrl}/reservation?username=${encodeURIComponent(username)}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(data);\n      setReservations(data);\n    } catch (err) {\n      console.error(\"Error fetching reservations\", err);\n    }\n  };\n\n  useEffect(() => {\n    const savedCategory = localStorage.getItem('selectedCategory');\n    if (savedCategory) {\n      setCategory(savedCategory);\n  \n      if (savedCategory === 'DateAsc') {\n        sortDateAscending();\n      } else if (savedCategory === 'DateDesc') {\n        sortDateDescending();\n      } else if (savedCategory === 'PartyDesc') {\n        sortPartyDescending();\n      } else if (savedCategory === 'PartyAsc') {\n        sortPartyAscending();\n      }\n    }\n    else {\n      fetchReservations();\n    }\n    \n    fetchRestaurants();\n  }, []);\n\n  // (note reservation table updated with user_Id and restaurant_Id)\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${apiUrl}/reservation`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify ({\n\t  username: username,\n          restaurant: selectedRestaurant,\n          party: parseInt(party),\n          date: date,\n          time: time,\n          note: note\n        }),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.log(errorData);\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setResponseMessage(`Reservation added: ${data.restaurant}`);\n\n      fetchReservations();\n      setSelectedRestaurant('');\n      setParty('');\n      setDate('');\n      setTime('');\n      setNote('');\n    } catch (err) {\n      setResponseMessage(err.message || 'Error adding reservation');\n    }\n  };\n\n  // call to server to edit reservations\n  const handleEdit = async (reservationId, updatedReservation) => {\n    console.log(updatedReservation);\n    try {\n      const response = await fetch(`${apiUrl}/reservation/edit/${reservationId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedReservation),\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setResponseMessage(`Reservation edited: ${data.restaurant}`);\n      fetchReservations();\n    } catch (err) {\n      setResponseMessage('Error editing reservation');\n    }\n  };\n\n  // call to server to delete reservations\n  const handleDelete = async (reservationId) => {\n    try {\n      const response = await fetch(`${apiUrl}/reservation/${reservationId}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } \n    } catch (err) {\n      setResponseMessage('Error deleting reservation');\n    }\n    fetchReservations();\n  };\n\n  // call to server to filter\n  const handleSortChange = (e) => {\n    const selectedCategory = e.target.value;\n    \n    setCategory(selectedCategory); \n    localStorage.setItem('selectedCategory', selectedCategory);\n  \n    if (selectedCategory === 'DateAsc') {\n      sortDateAscending();\n    } else if (selectedCategory === 'DateDesc') {\n      sortDateDescending();\n    } else if (selectedCategory === 'PartyAsc'){\n      sortPartyAscending();\n    } else if (selectedCategory === 'PartyDesc') {\n      sortPartyDescending();\n    } else {\n      setCategory('');\n      localStorage.removeItem('selectedCategory');\n      fetchReservations();\n    }\n  };\n\n  // call to server to sort by date\n  const sortDateDescending = async () => {\n    try {\n      const response = await fetch (`${apiUrl}/reservation/sorted-date?sort=desc&username=${encodeURIComponent(username)}`, \n        { method: 'GET'} ,\n      );\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } \n      const sortedReservations = await response.json();\n      setReservations(sortedReservations);\n    } catch (err) {\n      setResponseMessage('Error sorting reservation');\n    }\n    //fetchReservations();\n  };\n\n  // call to server to sort by date\n  const sortDateAscending = async () => {\n    try {\n      const response = await fetch (`${apiUrl}/reservation/sorted-date?sort=asc&username=${encodeURIComponent(username)}`, {\n        method: 'GET',\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } \n      const sortedReservations = await response.json();\n      setReservations(sortedReservations);\n    } catch (err) {\n      setResponseMessage('Error sorting reservation');\n    }\n    //fetchReservations();\n  };\n\n  // call to server to sort by date\n  const sortPartyDescending = async () => {\n    try {\n      const response = await fetch (`${apiUrl}/reservation/sorted-party?sort=desc&username=${encodeURIComponent(username)}`, {\n        method: 'GET',\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } \n      const sortedReservations = await response.json();\n      setReservations(sortedReservations);\n    } catch (err) {\n      setResponseMessage('Error sorting reservation');\n    }\n    //fetchReservations();\n  };\n\n  // call to server to sort by date\n  const sortPartyAscending = async () => {\n    try {\n      const response = await fetch (`${apiUrl}/reservation/sorted-party?sort=asc&username=${encodeURIComponent(username)}`, {\n        method: 'GET',\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } \n      const sortedReservations = await response.json();\n      setReservations(sortedReservations);\n    } catch (err) {\n      setResponseMessage('Error sorting reservation');\n    }\n    //fetchReservations();\n  };\n\n  const handleSearchChange = (e) => {\n    const searchTerm = e.target.value;\n    setSearch(searchTerm);\n    searchReservation(searchTerm); // Trigger search whenever the input changes\n  };\n\n  // call to server to search by restaurant name\n  const searchReservation = async (searchTerm) => {\n    //console.log(searchTerm)\n    try {\n      const response = await fetch (`${apiUrl}/reservation/search?q=${encodeURIComponent(searchTerm)}&username=${encodeURIComponent(username)}`, { // encodeURIComponent prevents injections\n        method: 'GET',\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      //console.log(\"Returning\" ,data);\n      setReservations(data);\n    } catch (err) {\n      setResponseMessage('Error searching reservation');\n    }\n  };\n\n\n  // -------------------- Restaurant Rating calls ---------------------------------------\n  const handleRestaurantSubmit = async (e) => {\n    e.preventDefault();\n    if (!selectedRestaurant) return;\n    try {\n      const response = await fetch (`${apiUrl}/restaurant/${selectedRestaurant}`, { \n        method: 'GET',\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      //console.log(\"Returning\" ,data);\n      setDisplayRestaurant(data);\n    } catch (err) {\n      setResponseMessage('Error searching restaurant');\n    }\n  };\n\n  const handleAddRating = async() => {\n\n  };\n\n  \n\n  return (\n    <div className=\"App\">\n      <h1>Welcome, {username}!</h1>\n      { /* Add Reservations */}\n      <h3>Add Reservation</h3>\n      <form onSubmit={handleSubmit}>\n        {/*<input\n          type=\"text\"\n          placeholder=\"Restaurant Name\"\n          value={restaurant}\n          onChange={(e) => setRestaurant(e.target.value)}\n          required\n        />*/}\n        <select\n          value={selectedRestaurant}\n          onChange={(e) => setSelectedRestaurant(e.target.value)}\n          required\n        >\n          <option value=\"\" disabled>Select a Restaurant</option>\n          {restaurants.map((restaurant) => (\n            <option key={restaurant._id} value={restaurant.name}>\n              {restaurant.name}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          placeholder=\"Party Number\"\n          value={party}\n          onChange={(e) => setParty(e.target.value)}\n          required\n        />\n        <input\n          type=\"date\"\n          placeholder=\"Date\"\n          value={date}\n          onChange={(e) => setDate(e.target.value)}\n          required\n        />\n        <input\n          type=\"time\"\n          step= \"1800\"\n          placeholder=\"Time\"\n          value={time}\n          onChange={(e) => setTime(e.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Note\"\n          value={note}\n          onChange={(e) => setNote(e.target.value)}\n        />\n        <button type=\"submit\">Add Reservation</button>\n      </form>\n      {responseMessage && <p>{responseMessage}</p>}\n\n     \n\n      { /* Display Reservations */}\n      <div className=\"reservation-container\">\n        <h3>My Reservations</h3>\n\n        {/* Searching */}\n        <div className=\"search-container\">\n          <p>Search By Restaurant</p>\n          <input\n            type=\"text\"\n            placeholder=\"Restaurant Name\"\n            value={search}\n            onChange={handleSearchChange}\n          />\n        </div>\n        \n         {/* Filtering / Sorting*/}\n        <div className=\"sort-container\">\n          <p>Sort By</p>\n          <select value={category} onChange={handleSortChange}>\n            <option value=\"\">Select a filter</option>\n            <option value=\"DateAsc\">Date: ascending</option>\n            <option value=\"DateDesc\">Date: descending</option>\n            <option value=\"PartyAsc\">Party: ascending</option>\n            <option value=\"PartyDesc\">Party: descending</option>\n          </select>\n        </div>\n\n        {/* Header Row */}\n        <div className=\"reservation-header\">\n          <div>Restaurant Name</div>\n          <div>Party</div>\n          <div>Date</div>\n          <div>Time</div>\n          <div>Note</div>\n          <div>Actions</div>\n        </div>\n\n        {/* Reservation Entries */}\n        <div className=\"reservation-list\">\n          {reservations.map((reservation) => (\n            <div key={reservation._id} className=\"reservation-item\">\n              <input type=\"text\" value={reservation.restaurant} disabled />\n              <input type=\"number\" \n                /*editParty = {reservation.party}\n                value={editParty} \n                readOnly = {false}\n                onChange = {(e) => setEditParty({...editParty, [reservation._id]: e.target.value})}*/\n                value={editData[reservation._id]?.party || reservation.party}\n                onChange={(e) => setEditData(prev => ({\n                  ...prev,\n                  [reservation._id]: { ...prev[reservation._id], party: parseInt(e.target.value) }\n                }))}\n               />\n              <input type=\"date\" \n                /*value={new Date(reservation.date).toISOString().split('T')[0]} \n                readOnly = {false}\n                onChange = {(e) => setEditDate({...editDate, [reservation._id]: e.target.value})}*/\n                value={editData[reservation._id]?.date || new Date(reservation.date).toISOString().split('T')[0]}\n                onChange={(e) => setEditData(prev => ({\n                  ...prev,\n                  [reservation._id]: { ...prev[reservation._id], date: e.target.value }\n                }))}\n               />\n              <input type=\"time\" \n                /*value={reservation.time} \n                readOnly = {false}\n                onChange = {(e) => setEditTime({...editTime, [reservation._id]: e.target.value})}*/\n                value={editData[reservation._id]?.time || reservation.time}\n                onChange={(e) => setEditData(prev => ({\n                  ...prev,\n                  [reservation._id]: { ...prev[reservation._id], time: e.target.value }\n                }))}\n               />\n              <input type=\"text\" value={reservation.note || ''} disabled />\n\n              {/*<button onClick={() => handleEdit(reservation._id,\n                {party: parseInt(editParty),\n                date: editDate,\n                time: editTime,}\n                \n              )}> Edit</button>*/}\n\n              <button onClick={() => handleEdit(reservation._id, editData[reservation._id] || {})}>Edit</button>\n              <button onClick={() => handleDelete(reservation._id)}>Delete</button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n\n      {/* Restaurants and ratings Section */}\n      {/* \n      <h3>Restaurant Ratings</h3>\n      <div className=\"add-restaurant-container\">\n        <p>Add A Restaurant</p>\n        <form onSubmit={handleRestaurantSubmit}>\n          <select\n            value={selectedRestaurant}\n            onChange={(e) => setSelectedRestaurant(e.target.value)}\n            required\n          >\n            <option value=\"\" disabled>Select a Restaurant</option>\n            {restaurants.map((restaurant) => (\n              <option key={restaurant._id} value={restaurant._id}>\n                {restaurant.name}\n              </option>\n            ))}\n          </select>\n          <button type=\"submit\">Go!</button>\n        </form>\n      </div>\n\n      <h3>Restaurant Details</h3>\n      <div className=\"restaurant-header\">\n          <div className=\"header-item\">\n            <div className=\"header-label\">Restaurant Name</div>\n            <div className=\"header-value\">{displayRestaurant.name}</div>\n          </div>\n          <div className=\"header-item\">\n            <div className=\"header-label\">Rating</div>\n            <div className=\"header-value\">{displayRestaurant.rating}</div>\n          </div>\n          <div className=\"header-item\">\n            <div className=\"header-label\">Number of Diners</div>\n            <div className=\"header-value\">{displayRestaurant.diners}</div>\n          </div>\n          <div className=\"header-item\">\n            <div className=\"header-label\">My Rating</div>\n            <div className=\"header-value\">\n                <select\n                  value={myRating}\n                  onChange={(e) => setMyRating(e.target.value)}\n                  className=\"rating-dropdown\"\n                >\n                  <option value=\"\" disabled>Select Rating</option>\n                  {[1, 2, 3, 4, 5].map((value) => (\n                    <option key={value} value={value}>\n                      {value}\n                    </option>\n                  ))}\n              </select>\n              <button onClick={handleAddRating}> Add </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"my-restaurant-container\">\n          <h3>My Reservations</h3>\n\n          \n          <div className=\"my-restaurant-header\">\n            <div>Restaurant Name</div>\n            <div>Rating</div>\n            <div>Number of diners</div>\n          </div>\n        </div>\n      */}\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}